@*sürekli buraya usingle makale entity yazmak yerine view deki webconfig in namespace ine yazdık*@

@model List<Note>
@{
    ViewBag.Title = "Index";
}


<div class="container">
    <div class="row">
        <div class="col-md-3">
            @Html.Partial("_PartialPageKategoriler")
        </div>
        <div class="col-md-9">

            <div class="row carousel-holder">

                <div class="col-md-12">
                    <div id="carousel-example-generic" class="carousel slide" data-ride="carousel">
                        <ol class="carousel-indicators">
                            <li data-target="#carousel-example-generic" data-slide-to="0" class="active"></li>
                            <li data-target="#carousel-example-generic" data-slide-to="1"></li>
                            <li data-target="#carousel-example-generic" data-slide-to="2"></li>
                        </ol>
                        <div class="carousel-inner">
                            <div class="item active">
                                <img class="slide-image" src="
                                ~/image/nba2.jpg"
                                     alt="">
                            </div>
                            <div class="item">
                                <img class="slide-image" src="
                                ~/image/nfl 3.jpg" alt="">
                            </div>
                            <div class="item">
                                <img class="slide-image" src="
                                 ~/image/f1 2.jpg" alt="">
                            </div>
                        </div>
                        <a class="left carousel-control" href="#carousel-example-generic" data-slide="prev">
                            <span class="glyphicon glyphicon-chevron-left"></span>
                        </a>
                        <a class="right carousel-control" href="#carousel-example-generic" data-slide="next">
                            <span class="glyphicon glyphicon-chevron-right"></span>
                        </a>
                    </div>
                </div>

            </div>

            <div class="row">
                @foreach (var item in Model)
                {
                    <div class="col-sm-4 col-lg-4 col-md-4">
                        <div class="thumbnail">
                            <img src="~/image/spor.jpg" alt="">
                            <div class="caption">
                                <h4>
                                    <a href="#">@item.Baslik</a>
                                </h4>
                                <h6 class="text-right">
                                    <span class="glyphicon glyphicon-user"></span>@item.kullanici.KullaniciAd<br />
                                    <span class="glyphicon glyphicon-time"></span>@item.DegistirmeTarihi.ToString("dd.MM.yy HH:mm")  @*tarih ve saat dakika formatında yazmasını sağlsdık*@
                                </h6>

                                @if (!string.IsNullOrEmpty(item.Text) && item.Text.Length > 80)
                                {
                                    <p>@item.Text.Substring(0, 80)</p> @*sıfırdan başlayıp 50. karaktere kadar olanı al*@
                                    <a href="#" class="btn-btn btn-default btn-xs"><span class="glyphicon glyphicon-chevron-right"></span>devamı..</a>
                                }
                                else
                                {
                                    <p> @item.Text</p>

                                }

                            </div>
                            <div>
                                <hr />
                            </div>
                            <div class="ratings">
                                <p class="pull-right">
                                    <button class="btn btn-default btn-xs" data-toggle="modal" data-target="#modal1" data-whatever="@item.ID"><span class="glyphicon glyphicon-comment text-danger"></span>Yorumlar</button>
                                </p>
                                <p>
                                    <button class="btn btn-default btn-xs">
                                        <span class="glyphicon glyphicon-heart text-danger"></span>@item.BegeniSayisi
                                    </button>
                                </p>
                            </div>
                        </div>
                    </div>
                }

            </div>

        </div>

    </div>

</div>
@section footer{
    @Html.Partial("_PartialPageFooter")
}


@BootstrapHelper.ModalPoppup("modal1","yorumlar")
<script>
    var NotId = -1;
    $(function () {     //bu function ımız sayfa yklenriken çalışacaktır

        $('#modal1').on('show.bs.modal', function (event) {
            var button = $(event.relatedTarget) // Button that triggered the modal
            NotId = button.data('whatever')

        //$('#modal1').on('show.bs.modal', function (e) {
        //    console.log("test");
        //    var button = $(e.relatedTarget);   //reletedtarget tıklanaan şeyin bilgisi demek.yani butonun
        //    console.log("test");
        //    var NotId = button.data("NotId");
        //    console.log(NotId);
            $('#modal1_body').load("/Yorum/YorumGoster/" + NotId);
            console.log("test");
        });
    });
    function yorumislem(btn, islem, yorumid, yorumtext)   //bu function ise ne zaman çağırırsak o zaman çalışacaktır
    {
        var button = $(btn);  //burada butonu yakaladı
        var editmod = button.data('edit');  //butonun edit datasını al. data edit tin içinde false olarak string bir ifadeyle yazdık fakat var buarada stringin içindeki değeri alma görevinde bulunuyor

        if (islem === 'update') {
            if (!editmod) {
                button.data('edit', true);
                button.removeClass('btn-warning');
                button.addClass('btn-success');
                var span = button.find('span');
                span.removeClass('glyphicon-edit');
                span.addClass('glyphicon-ok');

                $(yorumtext).attr("contenteditable", true);  //yorumtext=partialpage e gönderdiğimiz text in bilgisi. attr=attribute
            }
            else {
                button.data('edit', false);
                button.removeClass('btn-success');
                button.addClass('btn-warning');
                var span = button.find('span');
                span.removeClass('glyphicon-ok');
                span.addClass('glyphicon-edit');

                $(yorumtext).attr("contenteditable", false);
                var yenitxt = $(yorumtext).text();
                $.ajax({
                    method: "Post",
                    url: "/yorum/edit/" + yorumid,
                    data: { text: yenitxt }  //text burada parametre bunu edit controller da alıcaz

                }).done(function (data) {    //yorum contreller da ki edit de return edilen bilgi data ya geliyor
                    //done olunca yorumlar yeniden yüklenir
                    if (data.sonuc)
                        $('#modal1_body').load("/Yorum/YorumGoster/" + NotId);
                    else
                        alert("yorum düzenlenemedi");
                }).fail(function () {
                    alert('sunucu ile bağlatı kurulamadı');
                })
            }
        }
        else if (islem === 'delete') {
            var mesaj = confirm("yorum silinsin mi?");
            if (!mesaj)
                return false;
            $.ajax({
                method: "Post",
                url: "/yorum/delete/" + yorumid
            }).done(function () {
                $('#modal1_body').load("/Yorum/YorumGoster/" + NotId);
            }).fail(function () {
                alert("sunucu ile bağlantı kurulamadı");
            })
        }
    }
</script>

